From a3b5bc371924800e19d159365c105ba6e9dadd3d Mon Sep 17 00:00:00 2001
From: Masato TOYOSHIMA <phoepsilonix@phoepsilonix.love>
Date: Tue, 14 May 2024 20:28:12 +0900
Subject: [PATCH] patch-r8168-linux6.9

---
 PKGBUILD                   |   7 ++-
 patch-r8168-linux6.9.patch | 101 +++++++++++++++++++++++++++++++++++++
 2 files changed, 106 insertions(+), 2 deletions(-)
 create mode 100644 patch-r8168-linux6.9.patch

diff --git a/PKGBUILD b/PKGBUILD
index 9ac1e2a..cc4df21 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -21,13 +21,16 @@ groups=("${_linuxprefix}-extramodules")
 depends=('glibc' "${_linuxprefix}")
 makedepends=("${_linuxprefix}-headers")
 source=("https://github.com/mtorromeo/r8168/archive/$pkgver/${_module}-$pkgver.tar.gz"
-        "https://github.com/mtorromeo/r8168/releases/download/$pkgver/${_module}-$pkgver.tar.gz.asc")
+        "https://github.com/mtorromeo/r8168/releases/download/$pkgver/${_module}-$pkgver.tar.gz.asc"
+        patch-r8168-linux6.9.patch)
 sha256sums=('7c00cc13f17c45e1d1002e4c390f118204b04d42caba9d04d8ae95e953770857'
-            'SKIP')
+            'SKIP'
+            '46e8715632a35c5b3d62fba9079649daf47f7427ec07e6d645ca6dee7bd82e4d')
 validpgpkeys=('0CADAACF70F64C654E131B3111675C743429DDEF') # Massimiliano Torromeo <massimiliano.torromeo@gmail.com>
 
 prepare() {
   cd "${_module}-$pkgver"
+  patch -p1 -i ${srcdir}/patch-r8168-linux6.9.patch
 }
 
 
diff --git a/patch-r8168-linux6.9.patch b/patch-r8168-linux6.9.patch
new file mode 100644
index 0000000..f47f0ed
--- /dev/null
+++ b/patch-r8168-linux6.9.patch
@@ -0,0 +1,101 @@
+diff --git a/src/r8168_n.c b/src/r8168_n.c
+index ad63f42..3d67641 100755
+--- a/src/r8168_n.c
++++ b/src/r8168_n.c
+@@ -7941,7 +7941,11 @@ rtl8168_device_lpi_t_to_ethtool_lpi_t(struct rtl8168_private *tp , u32 lpi_timer
+ }
+ 
+ static int
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++rtl_ethtool_get_eee(struct net_device *net, struct ethtool_keee *edata)
++#else
+ rtl_ethtool_get_eee(struct net_device *net, struct ethtool_eee *edata)
++#endif
+ {
+         struct rtl8168_private *tp = netdev_priv(net);
+         struct ethtool_eee *eee = &tp->eee;
+@@ -7975,9 +7979,15 @@ rtl_ethtool_get_eee(struct net_device *net, struct ethtool_eee *edata)
+ 
+         edata->eee_enabled = !!val;
+         edata->eee_active = !!(supported & adv & lp);
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++        ethtool_convert_legacy_u32_to_link_mode(edata->supported, supported);
++        ethtool_convert_legacy_u32_to_link_mode(edata->advertised, adv);
++        ethtool_convert_legacy_u32_to_link_mode(edata->lp_advertised, lp);
++#else
+         edata->supported = supported;
+         edata->advertised = adv;
+         edata->lp_advertised = lp;
++#endif
+         edata->tx_lpi_enabled = edata->eee_enabled;
+         edata->tx_lpi_timer = tx_lpi_timer;
+ 
+@@ -7985,11 +7995,19 @@ rtl_ethtool_get_eee(struct net_device *net, struct ethtool_eee *edata)
+ }
+ 
+ static int
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++rtl_ethtool_set_eee(struct net_device *net, struct ethtool_keee *edata)
++#else
+ rtl_ethtool_set_eee(struct net_device *net, struct ethtool_eee *edata)
++#endif
+ {
+         struct rtl8168_private *tp = netdev_priv(net);
+         struct ethtool_eee *eee = &tp->eee;
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++        u32 advertising, adv;
++#else
+         u32 advertising;
++#endif
+         int rc = 0;
+ 
+         if (!rtl8168_support_eee(tp))
+@@ -8013,6 +8031,18 @@ rtl_ethtool_set_eee(struct net_device *net, struct ethtool_eee *edata)
+         }
+ 
+         advertising = tp->advertising;
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++        ethtool_convert_link_mode_to_legacy_u32(&adv, edata->advertised);
++        if (linkmode_empty(edata->advertised)) {
++                adv = advertising & eee->supported;
++                ethtool_convert_legacy_u32_to_link_mode(edata->advertised, adv);
++        } else if (!linkmode_empty(edata->advertised) & ~advertising) {
++                dev_printk(KERN_WARNING, tp_to_dev(tp), "EEE advertised %x must be a subset of autoneg advertised speeds %x\n",
++                           adv, advertising);
++                rc = -EINVAL;
++                goto out;
++        }
++#else
+         if (!edata->advertised) {
+                 edata->advertised = advertising & eee->supported;
+         } else if (edata->advertised & ~advertising) {
+@@ -8021,15 +8051,29 @@ rtl_ethtool_set_eee(struct net_device *net, struct ethtool_eee *edata)
+                 rc = -EINVAL;
+                 goto out;
+         }
++#endif
+ 
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++        if (!linkmode_empty(edata->advertised) & ~eee->supported) {
++                dev_printk(KERN_WARNING, tp_to_dev(tp), "EEE advertised %x must be a subset of support %x\n",
++                           adv, eee->supported);
++                rc = -EINVAL;
++                goto out;
++        }
++#else
+         if (edata->advertised & ~eee->supported) {
+                 dev_printk(KERN_WARNING, tp_to_dev(tp), "EEE advertised %x must be a subset of support %x\n",
+                            edata->advertised, eee->supported);
+                 rc = -EINVAL;
+                 goto out;
+         }
++#endif
+ 
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
++        ethtool_convert_link_mode_to_legacy_u32(&eee->advertised, edata->advertised);
++#else
+         eee->advertised = edata->advertised;
++#endif
+         eee->eee_enabled = edata->eee_enabled;
+ 
+         if (eee->eee_enabled)
-- 
2.45.0

