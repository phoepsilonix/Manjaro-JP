diff --git a/PKGBUILD b/PKGBUILD
index 12ed1be..c1afc6b 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -21,13 +21,16 @@ groups=("${_linuxprefix}-extramodules")
 depends=('glibc' "${_linuxprefix}")
 makedepends=("${_linuxprefix}-headers")
 source=("https://github.com/mtorromeo/r8168/archive/$pkgver/${_module}-$pkgver.tar.gz"
-        "https://github.com/mtorromeo/r8168/releases/download/$pkgver/${_module}-$pkgver.tar.gz.asc")
+        "https://github.com/mtorromeo/r8168/releases/download/$pkgver/${_module}-$pkgver.tar.gz.asc"
+        strlcpy-to-strscpy.patch)
 sha256sums=('cd8ee58a260e9b654080d39e3a42e3a3fb821041ee79e631b4647d84120aa999'
-            'SKIP')
+            'SKIP'
+            '1da01d96646e17fb915709465551025f8d943d8e14937ab8dc5d3ceb8d94bd0f')
 validpgpkeys=('0CADAACF70F64C654E131B3111675C743429DDEF') # Massimiliano Torromeo <massimiliano.torromeo@gmail.com>
 
 prepare() {
   cd "${_module}-$pkgver"
+  patch -p1 -i ../strlcpy-to-strscpy.patch
 }
 
 build() {
diff --git a/strlcpy-to-strscpy.patch b/strlcpy-to-strscpy.patch
new file mode 100644
index 0000000..5b23ba4
--- /dev/null
+++ b/strlcpy-to-strscpy.patch
@@ -0,0 +1,71 @@
+diff --git a/src/rtl_eeprom.c.orig b/src/rtl_eeprom.c
+index 1f361a1..2ee9b10 100755
+--- a/src/rtl_eeprom.c.orig
++++ b/src/rtl_eeprom.c
+@@ -93,7 +93,7 @@ void rtl8168_eeprom_cleanup(struct rtl8168_private *tp)
+         rtl8168_lower_clock(tp, &x);
+ }
+ 
+-int rtl8168_eeprom_cmd_done(struct rtl8168_private *tp)
++static int rtl8168_eeprom_cmd_done(struct rtl8168_private *tp)
+ {
+         u8 x;
+         int i;
+diff --git a/src/r8168_n.c.orig b/src/r8168_n.c
+index 19ae62b..8ba24f6 100755
+--- a/src/r8168_n.c.orig
++++ b/src/r8168_n.c
+@@ -1621,7 +1621,7 @@ static int proc_dump_rx_desc_2(struct seq_file *m, void *v)
+         return 0;
+ }
+ 
+-void _proc_dump_tx_desc(struct seq_file *m, struct TxDesc *desc_base,
++static void _proc_dump_tx_desc(struct seq_file *m, struct TxDesc *desc_base,
+                         u32 alloc_size, u32 num_desc)
+ {
+         int i;
+@@ -2946,7 +2946,7 @@ static u32 rtl8168_mdio_real_read_phy_ocp(struct rtl8168_private *tp,
+         return mdio_real_direct_read_phy_ocp(tp, ocp_addr);
+ }
+ 
+-u32 mdio_real_read(struct rtl8168_private *tp,
++static u32 mdio_real_read(struct rtl8168_private *tp,
+                    u32 RegAddr)
+ {
+         int i, value = 0;
+@@ -5722,7 +5722,7 @@ rtl8168_set_rx_q_num(struct rtl8168_private *tp,
+         rtl8168_eri_write(tp, Q_NUM_CTRL_8168, 2, q_ctrl, ERIAR_ExGMAC);
+ }
+ 
+-void
++static void
+ rtl8168_set_rx_vlan_filter(struct rtl8168_private *tp)
+ {
+         int i;
+@@ -6293,7 +6293,7 @@ rtl8168_get_drvinfo(struct net_device *dev,
+         info->eedump_len = tp->eeprom_len;
+         BUILD_BUG_ON(sizeof(info->fw_version) < sizeof(rtl_fw->version));
+         if (rtl_fw)
+-                strlcpy(info->fw_version, rtl_fw->version,
++                strscpy(info->fw_version, rtl_fw->version,
+                         sizeof(info->fw_version));
+ }
+ 
+@@ -10342,7 +10342,7 @@ static void rtl8168_release_firmware(struct rtl8168_private *tp)
+         }
+ }
+ 
+-void rtl8168_apply_firmware(struct rtl8168_private *tp)
++static void rtl8168_apply_firmware(struct rtl8168_private *tp)
+ {
+         /* TODO: release firmware if rtl_fw_write_firmware signals failure. */
+         if (tp->rtl_fw) {
+@@ -28084,7 +28084,7 @@ rtl8168_link_timer(struct timer_list *t)
+ }
+ */
+ 
+-int rtl8168_enable_msix(struct rtl8168_private *tp)
++static int rtl8168_enable_msix(struct rtl8168_private *tp)
+ {
+         int i, nvecs = 0;
+         struct msix_entry msix_ent[R8168_MAX_MSIX_VEC];
